Paper Name,Authors,Link,Abstract,Venue,Year
Classification and Challenges of Non-Functional Requirements in ML-Enabled Systems: A Systematic Literature Review,"Vincenzo De Martino, Fabio Palomba",https://arxiv.org/pdf/2311.17483,"Machine learning (ML) is nowadays so pervasive and diffused that virtually no application can avoid its use. Nonetheless, its enormous potential is constantly threatened by non-functional requirements, such as sustainability. In particular, we noticed the lack of a comprehensive synthesis of the research efforts done so far and how these may drive further research. In this paper, we propose a systematic literature review targeting three key aspects such as (1) the classification of the non-functional requirements investigated so far, (2) the challenges to face when dealing with them, and (3) the automated approaches proposed in literature to support practitioners when optimizing them in practice. Through the combination of well-established guidelines for conducting systematic literature reviews and additional search criteria, we survey a total amount of 69 research articles. Our findings report that current research identified 30 different non-functional requirements, which can be grouped into six main classes. We also deliver a catalog of over 23 software engineering challenges that further research should consider, besides an overview of the automated approaches researchers proposed to support practitioners when optimizing non-functional requirements of machine learning-enabled systems. We conclude our work by distilling implications and a future outlook on the topic.",PrePrint,
Sustainability of Machine Learning-Enabled Systems: The ML Engineer's Perspective,"Vincenzo De Martino, Stefano Lambiase, Fabiano Pecorelli, Willem-Jan van den Heuvel, Filomena Ferrucci, Fabio Palomba",,"Software sustainability is a multifaceted concept that involves keeping social, environmental, and cost constraints under control when evolving software systems. This is a key non-functional attribute of Machine Learning (ML)-enabled systems, which supports their viability and societal impact in the long run. The software engineering research community is rapidly diving into the matter. Yet, we notice a lack of knowledge on how sustainability is managed in practice and what instruments our research community should aim to provide to improve current practices. In this paper, we apply mixed-method research to elicit information concerning (1) how ML engineers operationalize the definition of sustainability; (2) the software engineering practices employed to deal with sustainability; (3) how these practices impact the development processes; and (4) the open challenges that ML engineers face when developing ML-enabled systems. Our study features a first interview-based investigation involving six experienced ML engineers, followed by a confirmatory survey study with 134 participants. Our findings shed light on the current state of the practice, pointing out the limitations that our research community is called to address.",PrePrint,
Into the ML-Universe: An Improved Classification and Characterization of Machine-Learning Projects,"Vincenzo De Martino, Gilberto Recupito, Giammaria Giordano, Filomena Ferrucci, Dario Di Nucci, Fabio Palomba",https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4960056,"The prominence of Machine Learning (ML) systems led to the rise of Software Engineering for Artificial Intelligence (SE4AI), which addresses the unique engineering challenges of these systems. Researchers in SE4AI engage with three primary types of ML projects: those that apply ML techniques, those that develop new ML methodologies, and those that provide support tools and libraries. Current classification schemas distinguish ML projects based on their purpose and engineering quality, yet they miss a fine-grained classification of their nature and purpose. In this paper, we propose a novel, tool-supported automated classification schema for ML projects, coined Machine learning Automated Rule-based Classification Kit (MARK), that builds on top of the work by Gonzalez et al. to refine the classification of applied ML projects into `ML-Model Consumers' and `ML-Model Producers'. Our validation includes two empirical studies: assessing classifier accuracy on 4,603 ML projects from two datasets, and analyzing repository metrics like community engagement, activity, and structure. Our findings indicate high F1-scores for our classifier, particularly for `ML-Model Producer' projects, though challenges remain for `ML-Model Consumer' classification. Significant differences in repository metrics among the classified projects highlight the usefulness of MARK, offering insights for researchers studying the socio-technical dynamics of ML projects.
",PrePrint,
Examining the Impact of Bias Mitigation Algorithms on the Sustainability of ML-enabled Systems,"Vincenzo De Martino, Gianmario Voria, Ciro Troiano, Gemma Catolino, Fabio Palomba",https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4966447,"Context
In today's AI landscape, ensuring fairness in machine learning (ML) systems is critical. However, bias mitigation algorithms can affect more than just equity. They may alter the computational complexity and energy usage of ML systems, affecting their environmental impact. Similarly, fairness considerations can influence businesses' economic sustainability by shaping resource allocation and consumer trust.
Goal
This work aims to provide a benchmark study of the implications of applying bias mitigation algorithms on the sustainability of ML solutions. We first corroborate previous findings by examining their effect on social sustainability metrics. Additionally, we expand the current state of the art by analyzing their impact on environmental and economic sustainability, aiming to identify trade-offs for practitioners designing ML solutions.
Method
We evaluate six bias mitigation algorithms by conducting 3,360 experiments across multiple configurations of four ML algorithms and datasets. From these experiments, we compute metrics for social, environmental, and economic sustainability.
Results
Our findings show that all bias mitigation algorithms affect the three sustainability dimensions differently, indicating that applying these algorithms involves complex trade-offs.
Conclusions
Our study emphasizes the need for a deeper investigation into the trade-offs bias mitigation algorithms introduce and how they impact various non-functional requirements of ML systems.",PrePrint,
Do Developers Adopt Green Architectural Tactics for ML-Enabled Systems? A Mining Software Repository Study,"Vincenzo De Martino, Silverio Martínez-Fernández, Fabio Palomba",https://arxiv.org/pdf/2410.06708,"As machine learning (ML) and artificial intelligence (AI) technologies become increasingly prevalent in society, concerns about their environmental sustainability have grown. Developing and deploying ML-enabled systems, especially during training and inference, are resource-intensive, raising sustainability issues. Green AI has emerged as a response, advocating for reducing the computational demands of AI while maintaining accuracy. While recent research has identified various green tactics for developing sustainable ML-enabled systems, there is a gap in understanding the extent to which these tactics are adopted in real-world projects and whether additional, undocumented practices exist. This paper addresses these gaps by presenting a mining software repository study that evaluates the adoption of green tactics in 168 open-source ML projects on GitHub. In doing so, we introduce a novel mining mechanism based on large language models to identify and analyze green tactics within software repositories. Our results provide insights into the adoption of green tactics found in the literature and expand previous catalogs by providing 12 new tactics, with code examples to support wider implementation. This study contributes to the development of more sustainable ML systems by identifying adopted green tactics that offer substantial environmental benefits with minimal implementation effort. It provides practical insights for developers to green their systems and offers a path for future research to automate the integration of these tactics.",PrePrint,